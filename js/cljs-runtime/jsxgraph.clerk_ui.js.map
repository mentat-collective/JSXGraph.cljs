{"version":3,"sources":["jsxgraph/clerk_ui.cljc"],"mappings":"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","names":["cljs.core.swap_BANG_","nextjournal.clerk.sci-viewer/!sci-ctx","sci.core/merge-opts","js/Math","sci.core/-copy-ns","jsxgraph.core/Arrow","jsxgraph.core/Slider","jsxgraph.core/OtherIntersection","jsxgraph.core/MinorArc","jsxgraph.core/Spline","jsxgraph.core/Normal","jsxgraph.core/View3D","jsxgraph.core/Tangent","jsxgraph.core/ArrowParallel","jsxgraph.core/MetapostSpline","jsxgraph.core/RadicalAxis","jsxgraph.core/RiemannSum","jsxgraph.core/Button","jsxgraph.core/ParametricSurface3D","jsxgraph.core/Point","jsxgraph.core/CircumcircleArc","jsxgraph.core/MinorSector","jsxgraph.core/Conic","jsxgraph.core/Legend","jsxgraph.core/Semicircle","jsxgraph.core/Input","jsxgraph.core/Derivative","jsxgraph.core/TraceCurve","jsxgraph.core/Circle","jsxgraph.core/Label","jsxgraph.core/Bisector","jsxgraph.core/Line","jsxgraph.core/FunctionGraph","jsxgraph.core/Parallel","jsxgraph.core/Integral","jsxgraph.core/Incircle","jsxgraph.core/Glider","jsxgraph.core/Turtle","jsxgraph.core/MirrorElement","jsxgraph.core/SlopeTriangle","jsxgraph.core/Ticks","jsxgraph.core/Incenter","jsxgraph.core/Arc","jsxgraph.core/Text","jsxgraph.core/Hatch","jsxgraph.core/Segment","jsxgraph.core/Circumcircle","jsxgraph.core/Locus","jsxgraph.core/MajorArc","jsxgraph.core/PolygonalChain","jsxgraph.core/Checkbox","jsxgraph.core/PolePoint","jsxgraph.core/create","jsxgraph.core/Polygon","jsxgraph.core/ReflexAngle","jsxgraph.core/Midpoint","jsxgraph.core/Sector","jsxgraph.core/Transformation","jsxgraph.core/FunctionGraph3D","jsxgraph.core/Intersection","jsxgraph.core/CurveDifference","jsxgraph.core/Axis","jsxgraph.core/Grid","jsxgraph.core/Line3D","jsxgraph.core/k->component","jsxgraph.core/TapeMeasure","jsxgraph.core/PolarLine","jsxgraph.core/Comb","jsxgraph.core/MirrorPoint","jsxgraph.core/Boxplot","jsxgraph.core/JSXGraph","jsxgraph.core/Inequality","jsxgraph.core/Parabola","jsxgraph.core/PerpendicularPoint","jsxgraph.core/Ellipse","jsxgraph.core/Image","jsxgraph.core/Point3D","jsxgraph.core/Perpendicular","jsxgraph.core/PerpendicularSegment","jsxgraph.core/CurveIntersection","jsxgraph.core/Reflection","jsxgraph.core/CardinalSpline","jsxgraph.core/Angle","jsxgraph.core/Hyperbola","jsxgraph.core/NonReflexAngle","jsxgraph.core/CurveUnion","jsxgraph.core/Curve3D","jsxgraph.core/ForeignObject","jsxgraph.core/Curve","jsxgraph.core/Circumcenter","jsxgraph.core/ParallelPoint","jsxgraph.core/Chart","jsxgraph.core/RegularPolygon","jsxgraph.core/Bisectorlines","jsxgraph.core/CircumcircleSector","jsxgraph.core/StepFunction","jsxgraph.core/Group","jsxgraph.core/OrthogonalProjection","jsxgraph.core/MajorSector","sci.core.create_ns"],"sourcesContent":["(ns jsxgraph.clerk-ui\n  (:require #?(:cljs [jsxgraph.core])\n            #?(:clj  [nextjournal.clerk :as clerk])\n            #?(:cljs [nextjournal.clerk.sci-viewer :as sv])\n            #?(:cljs [sci.core :as sci]))\n  #?(:cljs\n     (:require-macros [jsxgraph.clerk-ui])))\n\n;; ## SCI Customization\n;;\n;; The jsxgraph.core require and the following form make it possible to use this\n;; library's CLJS code in the Clerk notebooks that document the library.\n\n#?(:cljs\n   (swap! sv/!sci-ctx\n          sci/merge-opts\n          {:classes    {'Math js/Math}\n           :aliases    {'jsx 'jsxgraph.core}\n           :namespaces\n           {'jsxgraph.core\n            (sci/copy-ns jsxgraph.core (sci/create-ns 'jsxgraph.core))}}))\n\n;; ## Example Macro\n\n#?(:clj\n   (defmacro cljs [& exprs]\n     `(nextjournal.clerk/with-viewer\n        {:transform-fn nextjournal.clerk/mark-presented\n         :render-fn '(fn [_#]\n                       (let [result# (do ~@exprs)]\n                         (v/html\n                          (if (vector? result#)\n                            result#\n                            [v/inspect result#]))))}\n        {})))\n"]}